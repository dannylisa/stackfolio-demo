{"version":3,"sources":["styles/global-style.ts","styles/theme.ts","atoms/theme.tsx","components/material/Box.tsx","components/material/Button.tsx","components/material/Switch.tsx","components/sections/Header.tsx","atoms/user.tsx","components/common/Tag.tsx","components/material/Text.tsx","components/material/Textfield.tsx","styles/media.ts","components/home/SearchField.tsx","components/common/PostPreview.tsx","db/Topic.tsx","components/home/Topic.tsx","components/home/Home.tsx","components/Playground.tsx","db/Search.tsx","components/search/Search.tsx","components/tags/Tags.tsx","db/Tag.tsx","components/tags/TagDetail.tsx","components/questions/QuestionDetails.tsx","db/Question.tsx","components/material/Number.tsx","components/common/QuestionPreview.tsx","components/questions/Questions.tsx","components/search/SearchHome.tsx","db/User_Profile.ts","components/profile/Profile_Introduce.tsx","components/profile/Profile_Posts.tsx","components/profile/Profile_Series.tsx","components/profile/Treemap.tsx","components/profile/Profile.tsx","components/Routes.tsx","components/App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","reset","props","theme","mainBackground","themes","dark","opposite","title","disable","divider","tableHeader","default","main","text","border","accent","primary","secondary","light","themeState","atom","key","toggleThemeState","selector","get","set","Box","styled","div","alignItems","left","right","justifyContent","direction","rowSpace","columnSpace","transparent","Button","button","fullWidth","bold","fontSize","color","colorset","TextButton","a","Switch","size","inputProps","id","Math","random","toString","substr","w","r","CheckBoxWrapper","CheckBox","type","CheckBoxLabel","htmlFor","label","input","Head","header","Buttons","Header","useRecoilState","toggleTheme","history","useHistory","onClick","push","checked","onChange","userState","TagComponent","Tag","name","useState","loading","to","style","textDecoration","Text","Title","Subtitle","Contents","TextField","width","height","sizes","giant","huge","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","emSize","first","css","SearchWrapper","TagsDiv","Tags","SearchField","initialValue","searchValue","setSearchValue","placeholder","value","target","onKeyPress","which","Wrapper","TagsWrapper","Image","img","Avatar","ProfilePreview","PostPreview","tags","content","thumbnail","timestamp","author","likes","comments","map","tag","src","alt","length","slice","getTopicData","topic","posts","TopicWrapper","Topic","setLoading","setPosts","useEffect","postsData","post","idx","HomeWrapper","Home","Playground","setChecked","alert","prev","getSearchData","keyword","results","Search","match","params","setSearchResult","searchResultData","getTagData","HeadWrapper","BodyWrapper","TagDetail","setTagData","tagData","QuestionDetails","getQuestionData","question","views","Number","others","val","unit","floor","Link","Left","Right","CountBox","Icon","QuestionPreview","BiLike","RiQuestionAnswerLine","IoPeopleOutline","QuestionsWrapper","Questions","questions","setQuestions","Promise","all","questionData","SearchHome","getUserProfileData","created_at","Date","updated_at","username","bio","about","avatar","social_links","user","provider","social_id","email","is_verified","ProfileIntroduce","ProfilePosts","ProfileSeries","mapColorGenerator","i","colors","TreeContainer","DrawTreeMap","items","colorGenerator","padding","background","sum","acc","item","score","leftSum","leftRatio","ContainerStyle","gridTemplateRows","gridTemplateColumns","leftProps","rightProps","console","log","Treemap","useDimensions","ref","mapSize","setMapSize","min","javascript","python","react","graphQL","ml","scores","sorted","setSorted","sortedArr","entries","sort","b","generator","next","NumbersWrapper","About","Profile","tabs","setTabs","setUserProfile","userProfile","Routes","path","exact","component","App","useRecoilValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9987d573.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset}\n    html{\n        max-width: 100vw;\n        min-height: 100vh;\n        background-color: ${ props => props.theme.mainBackground}\n    }\n    body, html{\n        padding: 0;\n        margin: 0;\n    }\n`\nexport default GlobalStyle;","import { DefaultTheme } from \"styled-components\";\n\nconst dark: DefaultTheme = {\n    mainBackground: `#333`,\n    opposite: '#ccc',\n\n    // neutral color\n    title: `rgba(255,255,255,0.85)`,\n    disable: `rgba(255,255,255,0.25)`,\n    divider: `rgba(255,255,255,0.06)`,\n    tableHeader: `rgba(255,255,255,0.02)`,\n\n    // point-color\n    default:{\n      main: `rgba(255,255,255,0.04)`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `rgba(0,0,0,0.2)`,\n    },\n    primary: {\n      main: `rgba(255,255,255,0.8)`,\n      text: `rgba(0,0,0,0.65)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `rgba(255,255,255,0.6)`,\n    },\n    secondary:{\n      main: `rgba(0,0,0,0.2)`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `rgba(255,255,255,0.6)`,\n    }\n  };\nconst light: DefaultTheme = {\n    mainBackground: `#fff`,\n    opposite: '#333',\n\n    // neutral color\n    title: `rgba(0, 0, 0, 0.85)`,\n    disable: `rgba(0, 0, 0, 0.25)`,\n    divider: `rgba(0, 0, 0, 0.06)`,\n    tableHeader: `rgba(0, 0, 0, 0.02)`,\n    \n    // point-color\n    default:{\n      main: `rgba(0, 0, 0, 0.01)`,\n      text: `rgba(0, 0, 0, 0.85)`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: `rgba(0, 0, 0, 0.6)`\n    },\n    primary: {\n      main: `rgba(255,255,255,0.8)`,\n      text: `rgba(0, 0, 0, 1)`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: `rgba(0, 0, 0, 0.8)`\n    },\n    secondary: {\n      main: `rgba(0,0,0,0.2)`,\n      text: `rgba(0, 0, 0, 0.75)`,\n      border: `rgba(0, 0, 0, 0.2)`,\n      accent: `rgba(0, 0, 0, 0.5)`\n    }\n  };\n\nexport const themes = { dark, light };","import { atom, selector } from \"recoil\";\n\nexport const themeState = atom({\n    key: 'themeState',\n    default: 'light'\n})\n\nexport const toggleThemeState = selector({\n    key: 'toggleThemeState',\n    get: ({get}) => get(themeState),\n    set: ({set, get}) => set(themeState, get(themeState)==='light'?'dark':'light')\n});","import { ComponentPropsWithRef } from 'react';\nimport styled from 'styled-components';\n\nexport interface BoxProps extends ComponentPropsWithRef<\"div\"> {\n    transparent?: boolean\n    alignItems?: \"center\" | \"flex-start\" | \"flex-end\" | \"stretch\" | \"normal\"\n    justifyContent?: \"center\" | \"flex-start\" | \"flex-end\" | \"space-between\" | \"space-around\" | \"space-evenly\" | \"stretch\"\n    direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\"\n    left?: boolean\n    right?: boolean\n    rowSpace?: number\n    columnSpace?: number\n}\n\nexport const Box = styled.div<BoxProps>`\n    display: flex;\n    align-items: ${({alignItems}) => alignItems || \"center\"};\n    ${({left, right, justifyContent}) => (!left && !right) ? `justify-content: ${justifyContent || \"center\"};` : ''};\n    ${({left}) => left ? `justify-content: flex-start;` : ''}\n    ${({right}) => right ? `justify-content: flex-end;` : ''}\n    flex-direction: ${({direction}) => direction || \"row\"};\n    ${({rowSpace}) => rowSpace && `& > *:nth-child(n+2){margin-left:${rowSpace}px;}`}\n    ${({columnSpace}) => columnSpace && `& > *:nth-child(n+2){margin-top:${columnSpace}px;}`}\n\n    background-color: ${({transparent,theme}) => transparent? 'transparent': theme.default.main};\n    color: ${(props) => props.theme.default.text};\n`","import { ComponentPropsWithRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Colorset } from \"styles/styled\";\n\ninterface ButtonProps extends ComponentPropsWithRef<\"button\"> {\n    fontSize?: number\n    fullWidth?: boolean\n    color?: \"primary\" | \"secondary\" | \"default\"\n    bold?: boolean\n}\n\nexport const Button = styled.button<ButtonProps>`\n    /* This renders the buttons above... Edit me! */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 1rem;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '10rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize+'px' || '1rem'};\n\n    // 수정 필요!\n    ${ ({color, theme})=> {\n        const colorset: Colorset = !color ? theme.default : theme[color];\n        return `\n            background: ${colorset.main};\n            color: ${colorset.text};\n            border: thin solid ${colorset.border};\n            &:focus-within {\n                outline: ${colorset.accent} auto thin;\n            }\n        `\n    }}\n`\nexport const TextButton = styled.a<ButtonProps>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem 0;\n    background: ${({theme}) => theme.mainBackground};\n    text-align: center;\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize+'px' || '1rem'};\n\n    // 수정 필요!\n    ${ ({color, theme})=> {\n        const colorset: Colorset = !color ? theme.default : theme[color];\n        return `\n            color: ${colorset.text};\n            &:hover {\n                color: ${colorset.accent};\n            }\n        `\n    }}\n`","import React from 'react';\nimport { ComponentPropsWithRef } from 'react';\nimport styled from 'styled-components';\n\ninterface SwitchProps extends Omit<ComponentPropsWithRef<\"input\">, 'size'>  {\n    size?: 'sm'| 'md' | 'lg'\n}\n\nconst ID = () => '_'+Math.random().toString(36).substr(6);\n\n\nexport const Switch = (props:SwitchProps) => {\n    const {size, ...inputProps} = props;\n    const id = 'checkbox' + ID();\n    const [w, r] = size ==='md' ? [60,30] : size ==='lg' ?[84,40] : [42,26];\n    return (\n        <CheckBoxWrapper>\n            <CheckBox id={id} type=\"checkbox\" w={w} r={r} {...inputProps} />\n            <CheckBoxLabel htmlFor={id} w={w} r={r}/>\n        </CheckBoxWrapper>\n    );\n};\n  \nconst CheckBoxWrapper = styled.div`\nposition: relative;\n`;\ninterface CheckBoxLabelProps extends ComponentPropsWithRef<\"label\">{\n    w: number\n    r: number\n}\nconst CheckBoxLabel = styled.label<CheckBoxLabelProps>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.w}px;\n    height: ${props => props.r}px;\n    border-radius: ${props => props.w-props.r}px;\n    background: #bebebe;\n    cursor: pointer;\n    &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width:  ${props => props.r-6}px;\n        height:  ${props => props.r-6}px;\n        margin: 3px;\n        background: #ffffff;\n        box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n        transition: 0.2s;\n    }\n`;\n\ninterface CheckBoxProps extends ComponentPropsWithRef<\"input\">{\n    w: number\n    r: number\n}\nconst CheckBox = styled.input<CheckBoxProps>`\n    opacity: 0;\n    z-index: 1;\n    border-radius: ${props => props.w-props.r}px;\n    width: ${props => props.w}px;\n    height: ${props => props.r}px;\n    &:checked + ${CheckBoxLabel} {\n        background: #4fbe79;\n        &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width:  ${props => props.r-6}px;\n        height:  ${props => props.r-6}px;\n        margin-left:${props => props.w-props.r+3}px;\n        transition: 0.2s;\n    }\n}\n  `;","import { toggleThemeState } from \"atoms/theme\";\nimport { Box } from \"components/material/Box\";\nimport { TextButton } from \"components/material/Button\";\nimport { Switch } from \"components/material/Switch\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\n\nconst Head = styled.header`\n    height: 55px;\n    padding: 5px 20px 5px 20px;\n    color: ${({theme}) => theme.default.text};\n    \n    display: grid;\n    grid-template-columns : 150px calc(100% - 370px) 180px;\n`\nconst Buttons = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 25%);\n`\n\nconst Header = () => {\n    const [theme, toggleTheme] = useRecoilState(toggleThemeState);\n    const history = useHistory();\n    return (\n        <Head>\n            <TextButton bold fontSize={40} onClick={()=>history.push('/')}> Logo </TextButton>\n            <Box>\n                <Switch size=\"md\" checked={theme==='light'} onChange={()=>toggleTheme('')} />\n            </Box>\n            <Buttons>\n                <TextButton onClick={()=>history.push('/search')}>검색</TextButton>\n                <TextButton>글쓰기</TextButton>\n                <TextButton>알림</TextButton>\n                <TextButton>프로필</TextButton>\n            </Buttons>\n        </Head>\n    )\n}\nexport default Header;","import { atom } from \"recoil\";\n\nexport interface User {\n    id: string\n    email:string\n    name: string\n    avatar: string\n}\n\nexport const userState = atom({\n    key:'userState',\n    default:null\n})","import { Button } from 'components/material/Button';\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst TagComponent = styled(Button)`\n    margin: 0;\n    font-size: 1rem;\n    padding: 5px 10px;\n    width: auto;\n    border: none;\n    font-weight: bold;\n    border-radius: 10px;\n    box-shadow: 1px 1.5px 4px ${({theme}) => theme.default.border};\n    text-decoration: none;\n`\n\ninterface TagProps {\n    name: string\n}\n\ninterface TagData{\n    id: string,\n    name: string,\n}\nconst getTagById = async (name:string) => ({\n    id: 'a100',\n    name\n});\nconst Tag = ({name}:TagProps) => {\n    const [loading, setLoading] = useState(false);\n    // const [name, setName] = useState('');\n\n    // useEffect(()=>{\n    //     ( async () => {\n    //         const tag:TagData = await getTagById(name);\n    //         if(!tag) return;\n    //         setName(tag.name);\n    //         setLoading(false);\n    //     })();\n    // }, [id])\n\n    return (\n        <Link to={`/tags/${name}`} style={{textDecoration:'none'}}>\n            <TagComponent>\n                { loading ? '...' : name }\n            </TagComponent>\n        </Link>\n    )\n}\n\nexport default Tag;","import styled from 'styled-components';\nimport { Box, BoxProps } from './Box';\n\nexport interface TextProps extends BoxProps{\n    bold?: boolean\n    color?: string\n    fontSize?: number\n}\n\nconst Text = styled(Box)<TextProps>`\n    width: auto;\n    padding: 5px;\n    background-color: transparent;\n    color: ${({color}) => color || ''};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize+'px' || '1rem'};\n`\n\nexport const Head = (props:any) => <Text fontSize={48} bold left {...props}/>\nexport const Title = (props:any) => <Text fontSize={36} bold left {...props}/>\nexport const Subtitle = (props:any) => <Text fontSize={24} left {...props}/>\nexport const Contents = (props:any) => <Text fontSize={21} left {...props}/>\nexport const Infos = (props:any) => <Text fontSize={16} left {...props}/>\n\nexport default Text;","import { ComponentPropsWithRef } from \"react\";\nimport styled from \"styled-components\";\ninterface TextFieldProps extends ComponentPropsWithRef<\"input\"> {\n    fullWidth?: boolean\n    width?: number\n    height?: number\n}\n\nexport const TextField = styled.input<TextFieldProps>`\n    padding: 10px;\n    margin: 10px;\n    size: ${({size}) => size};\n    width: ${ ({fullWidth, width}) => fullWidth ? '100%' : width ? width+'px' : '10rem' };\n    height: ${({height}) => height ? height+'px' : ''};\n    background: ${ ({theme}) => theme.default.main };\n    border-color: ${ ({theme}) => theme.default.border };\n    border-radius: 3px;\n    color: ${ ({theme}) => theme.default.text };\n    &:focus{\n        outline-color: ${ ({theme}) => theme.default.accent };\n    }\n    ::placeholder {\n        color: ${ ({theme}) => theme.disable };\n    }\n`","import { css } from \"styled-components\"\n\nconst sizes: { [key: string]: number } = {\n  giant: 1920,\n  huge: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n}\n\n// Iterate through the sizes and create a media template\n// Usage:\n// const StyledWrapper = styled.div`\n//   ${media.huge`margin-left: 20px;`}\n// `\nconst media = Object.keys(sizes).reduce(\n  (accumulator: { [key: string]: any }, label: string) => {\n    const emSize = sizes[label] / 16\n    accumulator[label] = (first: any) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(first)}\n      }\n    `\n    return accumulator\n  },{})\n\n\n\nexport default media;","import Tag from 'components/common/Tag';\nimport { Box } from 'components/material/Box';\nimport { TextButton } from 'components/material/Button';\nimport Text from 'components/material/Text';\nimport { TextField } from 'components/material/Textfield';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport media from 'styles/media';\n\nconst SearchWrapper = styled.div`\n    margin: 20px 0 40px 0;\n    width: min(920px, 100%);\n    padding: 0;\n    display: grid;\n    grid-template-rows: auto 24px;\n    gap: 5px;\n    ${media.tablet`\n        display: none;\n    `}\n`\n\ninterface SearchFieldProps{initialValue?:string}\nconst SearchField = ({initialValue}:SearchFieldProps) => {\n    const [searchValue, setSearchValue] = useState(initialValue||'');\n    const history = useHistory();\n    const onSearched = ({which}:any) => which===13 && history.push(`/search/${searchValue}`)\n    return (\n        <Box transparent>\n            <SearchWrapper>\n                <Box transparent>\n                    <TextField \n                        placeholder=\"검색어를 입력해주세요...\"\n                        fullWidth\n                        height={50}\n                        style={{ fontSize: 24 }}\n                        value={searchValue}\n                        onChange={({target:{value}}) => setSearchValue(value)}\n                        onKeyPress={onSearched}\n                    />\n                </Box>\n                <Tags />\n            </SearchWrapper>\n        </Box>\n    )\n}\n\nconst TagsDiv = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: calc(100% - 150px) 150px;\n    padding: 0 10px;\n`;\n\nconst Tags = () => {\n    const history = useHistory();\n    return (\n        <TagsDiv>\n            <Box transparent left rowSpace={10}>\n                <Text bold> 인기 태그 목록 </Text>\n                <Tag name=\"python\"/>\n                <Tag name=\"javascript\"/>\n                <Tag name=\"react\"/>\n                <Tag name=\"c++\"/>\n                <Tag name=\"database\"/>\n            </Box>\n            <TextButton bold onClick={()=>history.push('/tags')}> \n                태그 더보기 \n            </TextButton>\n        </TagsDiv>\n    )\n}\n\nexport default SearchField;","import { getPostData, PostData } from 'db/Post';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Text from 'components/material/Text';\nimport Tag from './Tag';\nimport { Box } from 'components/material/Box';\nimport { AiOutlineLike } from 'react-icons/ai';\nimport { BiCommentDetail } from 'react-icons/bi';\nimport media from 'styles/media';\nimport { useHistory } from 'react-router-dom';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: 40px 40px 60px 16px 55px;\n    grid-template-columns: 70% 30%;\n    grid-template-areas: \n        \"tags tags\"\n        \"title img\"\n        \"contents img\"\n        \"info img\"\n        \"author likes\";\n    & > div:first-child{grid-area:tags;}\n    & > div:nth-child(2){grid-area:img;}\n    & > div:nth-child(3){grid-area:title;}\n    & > div:nth-child(4){grid-area:contents;}\n    & > div:nth-child(5){grid-area:info;}\n    & > div:nth-child(6){grid-area:author;}\n    & > div:nth-child(7){grid-area:likes;}\n    max-width: 100%;\n    box-shadow: 2px 2px 10px grey;\n    padding: 10px 10px 5px 10px;\n    ${media.phone`\n        grid-template-rows: 200px 40px 60px 16px 55px;\n        grid-template-areas: \n            \"img img\"\n            \"title title\"\n            \"contents contents\"\n            \"info info\"\n            \"author likes\";\n        & > div:first-child{display:none;}\n    `}\n`;\nconst TagsWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    & > *:nth-child(n+2){\n        margin-left: 10px\n    }\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n`\nconst Avatar = styled.img`\n    background-color: #ddd;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    margin: 2.5px;\n`\nconst ProfilePreview = styled.div`\n    display: grid;\n    grid-template-columns: 50px auto;\n    gap: 10px;\n`\n\nconst PostPreview = (props:PostData) => {\n    const history = useHistory();\n    const {tags, title, content, thumbnail, timestamp, author, likes, comments} = props;\n    return (\n        <Wrapper>\n            <TagsWrapper>\n                {tags.map(tag => <Tag key={tag} name={tag}/>)}\n            </TagsWrapper>\n            <Image src={thumbnail} alt=\"img\"/>\n            <Text bold left fontSize={21}>{title}</Text>\n            <Text>{content.length > 150 ? content.slice(0,150)+'...' : content}</Text>\n            <Text left bold >{timestamp} &nbsp; &nbsp;<BiCommentDetail/> &nbsp; {comments}</Text>\n            <ProfilePreview>\n                <Avatar onClick={()=>history.push(`/@${author}`)} />\n                <Text bold left>{author}</Text>\n            </ProfilePreview>\n            <Box transparent right>\n                <AiOutlineLike size={20}/> &nbsp;\n                <Text bold> {likes} </Text> &nbsp;\n            </Box>\n        </Wrapper>\n    )\n}\n\nexport default PostPreview;","import { PostData } from \"./Post\";\n\nexport interface TopicData {\n    topic: string\n    posts: PostData[]\n}\n\nexport const getTopicData = async (id:string):Promise<TopicData> => {\n    return {\n        topic:id,\n        posts: [\n            {\n                tags: ['python', 'javascript', 'react', 'es6'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 20,\n                likes: 51\n            },\n            {\n                tags: ['c++', 'javascript'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 10,\n                likes: 15\n            },\n            {\n                tags: ['maching learning', 'python'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 6,\n                likes: 5\n            },\n            {\n                tags: ['database'],\n                title: 'MySQL',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 62,\n                likes: 25\n            }\n        ]\n    }\n}","import { Box } from 'components/material/Box';\nimport PostPreview from 'components/common/PostPreview';\nimport Text from 'components/material/Text';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { PostData } from 'db/Post';\nimport { getTopicData } from 'db/Topic';\nimport media from 'styles/media';\n\nconst TopicWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \n        \"title title\"\n        \"a b\"\n        \"c d\";\n    ${media.desktop`\n        grid-template-columns: 1fr;\n        grid-template-areas: \n        \"title\"\n        \"a\"\n        \"b\"\n        \"c\"\n        \"d\";\n    `}\n    & > div:first-child {\n        grid-area: title;\n        height: 30px;\n        margin-bottom: -20px;\n    }\n    gap: 30px;\n`;\n\ninterface TopicProps{\n    title: string\n}\n\nconst Topic = ({title}:TopicProps) => {\n    const [loading, setLoading] = useState(true);\n    const [posts, setPosts] = useState<PostData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const postsData = await getTopicData(title);\n            setPosts(postsData.posts);\n            setLoading(false);\n        })();\n    },[])\n    return (\n        <Box transparent>\n            <TopicWrapper>\n                <Text \n                    justifyContent=\"flex-start\" \n                    bold\n                    fontSize={24}>\n                    {title}\n                </Text>\n                {\n                    loading ? <>Loading...</>\n                    :\n                    posts.map((post:PostData, idx:number) =>(\n                        <PostPreview key={idx} {...post} />\n                    ))\n                }\n            </TopicWrapper>\n        </Box>\n    );\n}\n\nexport default Topic;","import { userState } from 'atoms/user';\nimport { Box } from 'components/material/Box';\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport SearchField from './SearchField';\nimport Topic from './Topic';\n\nconst HomeWrapper = styled.div`\n    & > *:nth-child(n+3){margin-top:30px;}\n`\nconst Home = () => {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useRecoilState(userState);\n\n    return (\n        <HomeWrapper>\n            <SearchField />\n            <Topic title=\"요즘 뜨는 트렌드\" />\n            <Topic title=\"최신 포스트\" />\n        </HomeWrapper>\n    )\n}\n\nexport default Home;","import { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport { Switch } from 'components/material/Switch';\nimport { TextField } from 'components/material/Textfield';\nimport React, { useState } from 'react';\nimport Tag from './common/Tag';\n\nconst Playground = () => {\n    const [checked, setChecked] = useState(true);\n    return (\n        <>\n        <Box>\n            Buttons\n            <Button color=\"primary\" onClick={()=>{alert('hello!')}}>\n                Primary\n            </Button>\n            <Button color=\"secondary\">\n                Secondary\n            </Button>\n            <Button >\n                default\n            </Button>\n        </Box>\n        <hr/>\n        <Box>\n            Text Field\n            <TextField placeholder=\"hello\" size={100} />\n        </Box>\n        <hr/>\n        <Box>\n            <Box>\n                Switch\n            </Box>\n\n            <Switch/>\n            <Switch size='md' checked={!checked} onChange={()=>setChecked(prev=>!prev)}/>\n            <Switch size='lg'/>\n        </Box>\n        </>\n    )\n}\n\nexport default Playground;","import { PostData } from \"./Post\";\n\nexport interface SearchData {\n    keyword: string\n    results: PostData[]\n}\n\nexport const getSearchData = async (keyword:string):Promise<SearchData> => {\n    return {\n        keyword,\n        results: [\n            {\n                tags: ['python', 'javascript', 'react', 'es6'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 20,\n                likes: 51\n            },\n            {\n                tags: ['aa', 'bb'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 10,\n                likes: 15\n            },\n            {\n                tags: ['aa', 'bb'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 6,\n                likes: 5\n            }\n\n        ]\n    }\n}","import SearchField from 'components/home/SearchField';\nimport { Box } from 'components/material/Box';\nimport { TextButton } from 'components/material/Button';\nimport { PostData } from 'db/Post';\nimport { SearchData, getSearchData } from 'db/Search';\nimport React, { useEffect, useState } from 'react';\n\nconst Search = ({match}:any) => {\n    const {params:{keyword}} = match;\n    const [{results}, setSearchResult] = useState<SearchData>({\n        keyword, results:[]\n    })\n    useEffect(()=>{\n        (async()=>{\n            const searchResultData = await getSearchData(keyword);\n            setSearchResult(searchResultData);\n        })();\n    },[])\n    return (\n        <>\n            <SearchField />\n            <Box transparent direction=\"row\" left rowSpace={30}>\n                <TextButton bold>포스트</TextButton>\n                <TextButton bold>질문게시판</TextButton>\n            </Box>\n            {\n                // results.map( (result:PostData) => {\n                // })\n            }\n        </>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Tags = () => {\n    return (\n        <>\n        Tags List\n        </>\n    )\n}\n\nexport default Tags;","export interface TagData{\n    name: string\n    posts: number\n}\n\nexport const getTagData = async (name:string):Promise<TagData> => {\n    return {\n        name,\n        posts: 10\n    }\n}","import Preview from 'components/common/PostPreview';\nimport Text from 'components/material/Text';\nimport { getTagData } from 'db/Tag';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\n\nconst Wrapper = styled.div`\n    width: min(100%, 1470px);\n`\nconst HeadWrapper = styled.div`\n    margin-bottom: 45px;\n    & > * :first-child{\n        margin-bottom: 35px;\n    }\n    & > * :nth-child(2){\n        margin-bottom: 22px;\n    }\n\n`;\nconst BodyWrapper = styled.div`\n    display: grid;\n    gap:30px;\n    grid-template-columns: 1fr 1fr;\n    ${media.tablet`\n        grid-template-columns: 1fr;\n    `}\n`\n\n\nconst TagDetail = ({match}:any) => {\n    const {params:{id}} = match;\n    const [{name, posts}, setTagData] = useState({\n        name: '', posts:0\n    })\n    useEffect(()=>{\n        (async () => {\n            const tagData = await getTagData(id);\n            setTagData(tagData);\n        })();\n    }, [id])\n    return (\n        <>\n            <HeadWrapper>\n                <Text fontSize={48} left bold >#{name} </Text>\n                <Text fontSize={21} left>태그내용 설명 </Text>\n                <Text fontSize={16} left>\n                    {\n                        posts ? \n                        <>{posts}개의 포스트 </>\n                        : \"포스트가 없습니다.\"\n                    }\n                </Text>\n            </HeadWrapper>\n            <BodyWrapper>\n            </BodyWrapper>\n        </>\n    )\n}\n\nexport default TagDetail;","import React from 'react';\n\nconst QuestionDetails = ({match}:any) => {\n    const {params:{id}} = match;\n    return (\n        <>\n            {id}\n        </>\n    )\n}\n\nexport default QuestionDetails;","export interface QuestionData{\n    id:string\n    author:string\n    title: string\n    question: string\n    likes:number\n    views:number\n    comments: number\n}\n\nexport const getQuestionData = async(id:string):Promise<QuestionData> => {\n    return {\n        id,\n        author: 'Admin',\n        title: 'How to be a good programmer?',\n        question: '알려주세요...',\n        likes: 120,\n        views: 3902,\n        comments: 3\n    }\n}","import React from 'react';\nimport Text, {TextProps} from \"./Text\"\n\nexport interface NumberProps extends TextProps {\n    value: number\n}\nexport const Number = ({value, ...others}:NumberProps) => {\n    let val = value;\n    let unit = '';\n    if(value > 1000000000){\n        unit = 'b';\n        val = Math.floor(value/100000000)/10;\n    }\n    else if(value > 1000000){\n        unit = 'm';\n        val = Math.floor(value/100000)/10;\n    }\n    else if(value > 1000){\n        unit = 'k';\n        val = Math.floor(value/100)/10;\n    }\n    return (<Text {...others}> {val+unit} </Text>)\n}","import { Box } from 'components/material/Box';\nimport Text from 'components/material/Text';\nimport { QuestionData } from 'db/Question';\nimport React from 'react';\nimport { IconType } from 'react-icons';\nimport { BiLike } from 'react-icons/bi';\nimport { RiQuestionAnswerLine } from \"react-icons/ri\";\nimport { IoPeopleOutline } from \"react-icons/io5\";\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Tag from './Tag';\nimport { Number } from 'components/material/Number';\n\nconst Wrapper = styled(Link)`\n    display: grid;\n    grid-template-columns: 30% 70%;\n    max-width: 100%;\n    box-shadow: 2px 2px 10px grey;\n    padding: 10px;\n    min-height: 144px;\n    text-decoration:none;\n`;\nconst Left = styled.div`\n    display: grid;\n    padding-right:10px;\n    grid-template-columns: repeat(3, 33.33%);\n`\nconst Right = styled.div`\n    display: grid;\n    grid-template-areas: \n        \"t t\"\n        \"s s\"\n        \"tags info\";\n    grid-template-columns: calc(100% - 150px);\n    grid-template-rows: 35% 35% 30%;\n    & > *:first-child{grid-area: t}\n    & > *:nth-child(2){grid-area: s}\n`\n\ninterface CountBoxProps {\n    Icon: IconType\n    value:number\n}\nconst CountBox = ({Icon, value}:CountBoxProps) => {\n    return (\n        <Box transparent direction=\"column\">\n            <Number fontSize={24} value={value}/>\n            <Icon size={30}/>\n        </Box>\n    )\n}\n\nconst QuestionPreview = (props:QuestionData) => {\n    const {\n        id, author, title, question, likes, views, comments\n    } = props;\n\n    return (\n        <Wrapper to={`/questions/${id}`}>\n            <Left>\n                <CountBox Icon={BiLike} value={likes} />\n                <CountBox Icon={RiQuestionAnswerLine} value={comments} />\n                <CountBox Icon={IoPeopleOutline} value={views} />\n            </Left>\n            <Right>\n                <Text left bold>{title}</Text>\n                <Text left>{question}</Text>\n                <Box left transparent rowSpace={10}>\n                    <Tag name=\"Hello World!\" />\n                    <Tag name=\"C++\" />\n                </Box>\n                <Text>{author}</Text>\n            </Right>\n        </Wrapper>\n    )\n}\n\nexport default QuestionPreview;","import React, { useEffect, useState } from 'react';\nimport { getQuestionData, QuestionData } from 'db/Question'\nimport QuestionPreview from 'components/common/QuestionPreview';\nimport styled from 'styled-components';\nimport SearchField from 'components/home/SearchField';\n\nconst QuestionsWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n`\n\n\nconst Questions = () => {\n    const [questions, setQuestions] = useState<QuestionData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const questionData = await Promise.all(\n                ['a1', 'b222', 'c33'].map(async id => await getQuestionData(id))\n            )\n            setQuestions(questionData);\n        })();\n    },[])\n    return (\n        <>\n        <SearchField />\n        <QuestionsWrapper>\n            {questions.map( (question:QuestionData, idx:number) => \n                <QuestionPreview key={idx} {...question}/>)}\n        </QuestionsWrapper>\n        </>\n    )\n}\n\nexport default Questions;","import SearchField from 'components/home/SearchField';\nimport React from 'react';\n\nconst SearchHome = () => {\n    return (\n        <SearchField />\n    )\n}\n\nexport default SearchHome;","import { User } from \"./User\";\n\nexport interface User_Profile{\n    id: string\n    created_at: string\n    updated_at: string\n    username: string\n    bio: string\n    about: string\n    avatar: string\n\n    // What type?\n    social_links: any\n    user: User\n}\n\nexport const getUserProfileData = async (id:string):Promise<User_Profile> => {\n    return {\n        id,\n        created_at: new Date().toString(),\n        updated_at: new Date().toString(),\n        username: \"Admin\",\n        bio: \"string\",\n        about: \"Hello Everyone! Welcome!\",\n        avatar: \"https://t1.daumcdn.net/cfile/tistory/99B97B505CEB7FD712\",\n\n        // What type?\n        social_links: {},\n        user: {\n            id,\n            created_at: new Date().toString(),\n            updated_at: new Date().toString(),\n            provider: \"github\",\n            social_id: \"string\",\n            email: \"string\",\n            is_verified: true\n        }\n    }\n}","import React from 'react';\nimport { Box } from 'components/material/Box';\n\nconst ProfileIntroduce = () => {\n    return (\n        <Box>\n            자기소개\n        </Box>\n    )\n}\n\nexport default ProfileIntroduce","import React, { useEffect, useState } from 'react';\nimport { Box } from 'components/material/Box';\nimport { PostData } from 'db/Post';\nimport { getTopicData } from 'db/Topic';\nimport PostPreview from 'components/common/PostPreview';\nimport styled from 'styled-components';\n\nconst ProfilePosts = () => {\n    const [loading, setLoading] = useState(true);\n    const [posts, setPosts] = useState<PostData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const postsData = await getTopicData('');\n            setPosts(postsData.posts);\n            setLoading(false);\n        })();\n    },[])\n    return (\n        <Box direction=\"column\" columnSpace={30}>{\n            loading ? <>Loading...</>\n            :\n            [...posts, ...posts].map((post:PostData, idx:number) =>(\n                <PostPreview key={idx} {...post} />\n            ))\n        }</Box>\n    )\n}\n\nexport default ProfilePosts","import React from 'react';\nimport { Box } from 'components/material/Box';\n\nconst ProfileSeries = () => {\n    return (\n        <Box>\n            시리즈\n        </Box>\n    )\n}\n\nexport default ProfileSeries","import { Box } from 'components/material/Box';\nimport Text from 'components/material/Text';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useDimensions from \"react-cool-dimensions\";\nimport styled from 'styled-components';\n\ninterface ScoreElement {\n    name: string\n    score: number\n}\n\nfunction* mapColorGenerator(){\n    let i=0;\n    let colors = [\n        '#ffd1d1', '#ffffaa', '#ff3377', '#44aaff', '#6666ff', '#f9ac82', '#596666'\n    ]\n    while(true){\n        yield colors[i];\n        i++;\n        if(i>=colors.length) i%=colors.length;\n    }\n}\nconst TreeContainer = styled.div`\n    display: grid;\n    width: 100%;\n    height: 100%;\n`\nconst DrawTreeMap = ({items, width, height, colorGenerator}:{items:ScoreElement[]; width:number; height:number; colorGenerator():string}) => {\n    if(!items.length) return <></>;\n    else if(items.length===1){\n        return (\n            <Text bold style={{padding:0, width:\"100%\", height:\"100%\", background:colorGenerator()}}>\n                {items[0].name}\n            </Text>\n        )\n    }\n    const sum = items.reduce((acc, item) => acc + item.score, 0);\n\n    let leftSum = 0;\n    let idx = 0;\n    for(idx; idx<items.length; idx++){\n        leftSum+=items[idx].score;\n        if(leftSum >= sum/2) break;\n    }\n    const [left, right] = [items.slice(0,idx+1), items.slice(idx+1, items.length)];\n\n    const leftRatio = Math.floor(100*leftSum/sum);\n    let ContainerStyle= width > height ?{\n        gridTemplateRows: `${leftRatio}% ${100-leftRatio}%`\n    } : {\n        gridTemplateColumns: `${leftRatio}% ${100-leftRatio}%`\n    }\n    let leftProps={\n        items: left,\n        width,\n        height: height*leftRatio/100\n    }\n    let rightProps={\n        items: right,\n        width,\n        height: height*(100-leftRatio)/100\n    }\n    if(width>height){\n        leftProps={\n            items: left,\n            width: width*leftRatio/100,\n            height\n        }\n        rightProps={\n            items: right,\n            width: width*(100-leftRatio)/100,\n            height\n        }\n    }\n    console.log(width, height);\n    return (\n        <TreeContainer style={ContainerStyle}>\n            <DrawTreeMap colorGenerator={colorGenerator} {...leftProps} />\n            <DrawTreeMap colorGenerator={colorGenerator} {...rightProps} />\n        </TreeContainer>\n    )\n}\n\nconst Treemap = () =>{\n    const { ref, width } = useDimensions();\n    const [ mapSize, setMapSize ] = useState(0);\n\n    useEffect(()=>{\n        setMapSize(Math.min(width, 400))\n    },[width])\n\n    const [scores, setScores] = useState({\n        javascript: 804,\n        python: 490,\n        react: 1305,\n        graphQL: 200,\n        'c++': 180,\n        ml: 120\n    });\n    const [sorted, setSorted] = useState<ScoreElement[]>([]);\n    useEffect(()=>{\n        const sortedArr = Object.entries(scores).map( ([name, score]) => ({\n            name,\n            score,\n        })).sort((a, b) => b.score - a.score);\n        setSorted(sortedArr);\n    }, [scores])\n    \n    const generator = mapColorGenerator();\n    const colorGenerator = ():string => generator.next().value || \"white\";\n    return (\n        <Box transparent style={{width:\"100%\"}} ref={ref as React.RefObject<HTMLDivElement>}>\n            <div style={{width:mapSize, height:mapSize}}>\n                <DrawTreeMap items={sorted} width={mapSize} height={mapSize} colorGenerator={colorGenerator}/>\n            </div>\n        </Box>\n    )\n}\n\nexport default Treemap;","import { Box } from 'components/material/Box';\nimport { TextButton } from 'components/material/Button';\nimport { Number } from 'components/material/Number';\nimport {Title, Subtitle, Contents} from 'components/material/Text';\nimport { getUserProfileData, User_Profile } from 'db/User_Profile';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\nimport ProfileIntroduce from './Profile_Introduce';\nimport ProfilePosts from './Profile_Posts';\nimport ProfileSeries from './Profile_Series';\nimport Treemap from './Treemap';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 480px auto;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        gap: 30px;\n    `}\n`\nconst HeadWrapper = styled.div`\n    display: grid;\n    margin: 25px 0 80px 0;\n    height: 150px;\n    grid-template-columns: 150px auto;\n    grid-template-rows: 60% 40%;\n    column-gap: 20px;\n    grid-template-areas:\n        \"img name\"\n        \"img followers\";\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n`\nconst NumbersWrapper = styled.div`\n    display: grid;\n    margin-bottom: 60px;\n    width: max(75%, 360px);\n    grid-template-columns: repeat(4, 1fr);\n`\ninterface CountBoxProps{\n    title: string\n    value: number\n}\nconst CountBox = ({title, value}: CountBoxProps) => (\n    <Box transparent direction=\"column\">\n        <Subtitle>{title}</Subtitle>\n        <Number fontSize={24} value={value}/>\n    </Box>\n)\nconst About = styled(Box)`\n    background-color: ${({theme}) => theme.mainBackground};\n    width: calc(100% - 40px);\n    margin: 0 20px;\n    padding: 10px;\n    word-wrap: break-word;\n    min-height: 50px;\n`\nconst InfoWrapper = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 30% 70%;\n`\n\n\nconst Profile = ({match}:any) => {\n    const {params:{id}} = match;\n    const [tabs, setTabs] = useState(0);\n    const [{username, avatar, bio, about}, setUserProfile] = useState<User_Profile>(\n    {\n        id,\n        created_at: \"\",\n        updated_at: \"\",\n        username: \"\",\n        bio: \"\",\n        about: \"\",\n        avatar: \"\",\n        social_links: {},\n        user: {\n            id,\n            created_at: \"\",\n            updated_at: \"\",\n            provider: \"google\",\n            social_id: \"\",\n            email: \"\",\n            is_verified: false\n        }\n    });\n\n    useEffect(()=>{\n        (async () => {\n            const userProfile = await getUserProfileData(id);\n            setUserProfile(userProfile);\n        })();\n    },[id])\n\n    return (\n        <Wrapper>\n            {/* Profile */}\n            <Box direction=\"column\" justifyContent=\"flex-start\">\n                <HeadWrapper>\n                    <Image src={avatar}/>\n                    <Title alignItems=\"flex-end\">{username}</Title>\n                    <Contents alignItems=\"flex-start\">{bio}</Contents>\n                </HeadWrapper>\n                <NumbersWrapper>\n                    <CountBox title=\"팔로워\" value={300}/>\n                    <CountBox title=\"팔로잉\" value={19}/>\n                    <CountBox title=\"포스트\" value={30}/>\n                    <CountBox title=\"스코어\" value={348000}/>\n                </NumbersWrapper>\n                <About alignItems=\"flex-start\" left>{about}</About>\n                <Box style={{width:\"100%\"}} transparent left>\n                    <Subtitle bold>A</Subtitle>\n                    <Subtitle bold>B</Subtitle>\n                    <Subtitle bold>C</Subtitle>\n                    <Subtitle bold>D</Subtitle>\n                </Box>\n                <Treemap/>\n            </Box>\n            <Box transparent direction=\"column\" justifyContent=\"flex-start\" columnSpace={30}>\n                <Box transparent rowSpace={50}>\n                    <TextButton fontSize={24} onClick={()=>setTabs(0)}> 글</TextButton>\n                    <TextButton fontSize={24} onClick={()=>setTabs(1)}> 시리즈 </TextButton>\n                    <TextButton fontSize={24} onClick={()=>setTabs(2)}> 자기소개 </TextButton>\n                </Box>\n                {\n                    tabs === 0 ? \n                        <ProfilePosts/> \n                    : tabs === 1 ? \n                        <ProfileSeries/> \n                    :   <ProfileIntroduce/>\n                }\n            </Box>\n        </Wrapper>\n    )\n}\n\nexport default Profile;","import Header from 'components/sections/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from 'components/home/Home';\nimport Playground from './Playground';\nimport React from 'react';\nimport Search from './search/Search';\nimport { Box } from './material/Box';\nimport styled from 'styled-components';\nimport Tags from './tags/Tags';\nimport TagDetail from './tags/TagDetail';\nimport QuestionDetails from './questions/QuestionDetails';\nimport Questions from './questions/Questions';\nimport SearchHome from './search/SearchHome';\nimport Profile from './profile/Profile';\n\nconst Wrapper = styled.div`\n    width:min(1470px, calc(100% - 30px));\n    padding: 20px 0 40px 0;\n`\n\nconst Routes = () => {\n    return(\n    <BrowserRouter>\n    {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\n        <Header />\n        <Box transparent>\n            <Wrapper>\n                <Switch>\n                    <Route path=\"/playground\" exact component={Playground} />\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/@:id\" component={Profile} />\n                    <Route exact path=\"/search\" component={SearchHome} />\n                    <Route path=\"/search/:keyword\" component={Search} />\n                    <Route exact path=\"/tags\" component={Tags} />\n                    <Route path=\"/tags/:id\" component={TagDetail} />\n                    <Route exact path=\"/questions\" component={Questions} />\n                    <Route path=\"/questions/:id\" component={QuestionDetails} />\n                </Switch>\n            </Wrapper>\n        </Box>\n    </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport { DefaultTheme, ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'styles/global-style';\nimport {themes}from 'styles/theme';\nimport Routes from 'components/Routes';\nimport { useRecoilValue } from 'recoil';\nimport { themeState } from 'atoms/theme';\n\nfunction App() {\n  const themeType = useRecoilValue(themeState);\n  const theme:DefaultTheme = themeType==='light' ? themes.light : themes.dark;\n  return (\n    <>\n      <GlobalStyle theme={theme}/>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}