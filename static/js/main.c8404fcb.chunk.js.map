{"version":3,"sources":["styles/global-style.ts","styles/theme.ts","atoms/signInModal.tsx","atoms/theme.tsx","atoms/user.tsx","components/material/Box.tsx","components/material/Button.tsx","components/material/Switch.tsx","components/material/Text.tsx","components/sections/SignIn.tsx","components/sections/Header.tsx","components/common/MainWrapper.tsx","styles/media.ts","components/home/Main.tsx","components/common/Tag.tsx","styles/previewStyle.ts","components/common/PostPreview.tsx","db/Topic.tsx","components/home/Topic.tsx","db/TopicQuestions.tsx","components/material/Number.tsx","components/common/QuestionPreview.tsx","components/home/TopicQuestions.tsx","components/home/TrendTags.tsx","components/home/Home.tsx","components/material/Textfield.tsx","components/Playground.tsx","components/search/SearchField.tsx","db/Search.tsx","components/search/Search.tsx","components/tags/Tags.tsx","db/Tag.tsx","components/tags/TagDetail.tsx","components/questions/QuestionDetails.tsx","db/Question.tsx","components/questions/Questions.tsx","components/search/SearchHome.tsx","db/User_Profile.ts","components/profile/Profile_Introduce.tsx","components/profile/Profile_Posts.tsx","components/profile/Profile_Series.tsx","components/profile/Treemap.tsx","components/profile/Profile.tsx","components/Routes.tsx","components/App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","reset","props","theme","mainBackground","themes","dark","basic","title","disable","divider","tableHeader","default","main","text","border","accent","primary","secondary","ghost","light","signInModalState","atom","key","toggleSignInModalState","selector","get","set","themeState","toggleThemeState","userState","Box","styled","div","alignItems","left","right","justifyContent","direction","rowSpace","columnSpace","transparent","Button","button","fullWidth","bold","fontSize","color","colorset","Switch","size","inputProps","id","Math","random","toString","substr","w","r","CheckBoxWrapper","CheckBox","type","CheckBoxLabel","htmlFor","label","input","Text","Head","Title","Subtitle","Contents","Modal","ModalContent","ModalHeader","ModalBody","SocialButton","SignIn","useRecoilState","display","toggleDisplay","ref","useRef","colors","style","onClick","event","target","current","header","Buttons","Header","user","toggleTheme","history","useHistory","push","checked","onChange","MainWrapper","children","width","sizes","giant","huge","bigDesktop","desktop","tablet","thone","phablet","phone","tiny","media","Object","keys","reduce","accumulator","emSize","first","css","Wrapper","LeftWrapper","Main","TagComponent","small","Tag","name","useState","loading","toUpperCase","slice","previewStyle","TagsWrapper","Image","img","Avatar","ProfilePreview","WrapperFooter","PostPreview","tags","content","thumbnail","timestamp","author","likes","comments","mappedTimestamp","split","map","tag","src","alt","length","font-size","getTopicData","a","topic","posts","TopicWrapper","Topic","setLoading","setPosts","useEffect","postsData","post","idx","getTopicQuestionsData","questions","views","Number","value","others","val","unit","floor","Link","Left","Right","CountBox","Icon","QuestionPreview","to","BiLike","RiQuestionAnswerLine","IoPeopleOutline","TopicQuestions","setQuestions","questionsData","question","TrendTags","HomeWrapper","Home","TextField","height","Playground","setChecked","alert","placeholder","prev","SearchWrapper","TagsDiv","Tags","SearchField","initialValue","searchValue","setSearchValue","background","onKeyPress","which","getSearchData","keyword","results","Search","match","params","setSearchResult","searchResultData","getTagData","HeadWrapper","BodyWrapper","TagDetail","setTagData","tagData","QuestionDetails","getQuestionData","QuestionsWrapper","Questions","Promise","all","questionData","SearchHome","getUserProfileData","created_at","Date","updated_at","username","bio","about","avatar","social_links","provider","social_id","email","is_verified","ProfileIntroduce","ProfilePosts","ProfileSeries","mapColorGenerator","i","TreeContainer","TreeLeaf","DrawTreeMap","items","sum","acc","item","score","leftSum","leftRatio","ContainerStyle","gridTemplateRows","gridTemplateColumns","leftProps","rightProps","Treemap","useDimensions","mapSize","setMapSize","min","javascript","python","react","algorithm","graphQL","ml","scores","sorted","setSorted","generator","sortedArr","entries","sort","b","next","NumbersWrapper","About","Profile","tabs","setTabs","setUserProfile","userProfile","Routes","basename","process","path","exact","component","App","useRecoilValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8404fcb.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n    ${reset}\n    html{\n        max-width: 100vw;\n        min-height: 100vh;\n        background-color: ${ props => props.theme.mainBackground}\n    }\n    body, html{\n        padding: 0;\n        margin: 0;\n    }\n`\nexport default GlobalStyle;","import { DefaultTheme } from \"styled-components\";\n\nconst dark: DefaultTheme = {\n    mainBackground: `#333`,\n    basic: '#23384d',\n\n    // neutral color\n    title: `rgba(255,255,255,0.85)`,\n    disable: `rgba(255,255,255,0.25)`,\n    divider: `rgba(255,255,255,0.06)`,\n    tableHeader: `rgba(255,255,255,0.02)`,\n\n    // point-color\n    default:{\n      main: `rgba(255,255,255,0.04)`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `rgba(0,0,0,0.2)`,\n    },\n    primary: {\n      main: '#ff9425',\n      text: `#fff`,\n      border: `rgba(0, 0, 0, 0.5)`,\n      accent: `#f57e00`\n    },\n    secondary:{\n      main: `#464646`,\n      text: `rgba(255,255,255,0.85)`,\n      border: `rgba(255,255,255,0.15)`,\n      accent: `#5f5f5f`,\n    },\n    ghost: {\n      main: `rgba(255,255,255,0)`,\n      text: '#ff9425',\n      border: `rgba(255,255,255,0)`,\n      accent: `#4b3f32`,\n    }\n  };\nconst light: DefaultTheme = {\n    mainBackground: `#fbfbfb`,\n    basic: '#23384d',\n\n    // neutral color\n    title: `rgba(0, 0, 0, 0.85)`,\n    disable: `rgba(0, 0, 0, 0.25)`,\n    divider: `rgba(0, 0, 0, 0.06)`,\n    tableHeader: `rgba(0, 0, 0, 0.02)`,\n\n    // point-color\n    default: {\n      main: '#fbfbfb',\n      text: '#000',\n      border: '#333',\n      accent: '#f0f0f0'\n    },\n    primary: {\n      main: '#FF9E3A',\n      text: `#fff`,\n      border: `rgba(255, 148, 37, 0.5)`,\n      accent: `#f57e00`\n    },\n    secondary: {\n      main: '#E8E8E8',\n      text: `rgba(0, 0, 0, 0.75)`,\n      border: `rgba(232, 232, 232, 0.2)`,\n      accent: `#c3cbd5`\n    },\n    ghost: {\n      main: 'transparent',\n      text: '#ff9425',\n      border: `rgba(0, 0, 0, 0)`,\n      accent: `#fff5eb`\n    }\n  };\n\nexport const themes = { dark, light };","import { atom, selector } from \"recoil\";\n\nexport const signInModalState = atom({\n    key: 'signInModalState',\n    default: 'none'\n})\n\nexport const toggleSignInModalState = selector({\n    key: 'toggleSignInModalState',\n    get: ({get}) => get(signInModalState),\n    set: ({set, get}) => set(signInModalState, get(signInModalState)==='none'?'block':'none')\n});","import { atom, selector } from \"recoil\";\n\nexport const themeState = atom({\n    key: 'themeState',\n    default: 'light'\n})\n\nexport const toggleThemeState = selector({\n    key: 'toggleThemeState',\n    get: ({get}) => get(themeState),\n    set: ({set, get}) => set(themeState, get(themeState)==='light'?'dark':'light')\n});","import { atom } from \"recoil\";\n\nexport interface User {\n    id: string\n    email:string\n    name: string\n    avatar: string\n}\n\nexport const userState = atom({\n    key:'userState',\n    default: null\n})","import { ComponentPropsWithRef } from 'react';\nimport styled from 'styled-components';\n\nexport interface BoxProps extends ComponentPropsWithRef<\"div\"> {\n    transparent?: boolean\n    alignItems?: \"center\" | \"flex-start\" | \"flex-end\" | \"stretch\" | \"normal\"\n    justifyContent?: \"center\" | \"flex-start\" | \"flex-end\" | \"space-between\" | \"space-around\" | \"space-evenly\" | \"stretch\"\n    direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\"\n    left?: boolean\n    right?: boolean\n    rowSpace?: number\n    columnSpace?: number\n}\n\nexport const Box = styled.div<BoxProps>`\n    display: flex;\n    align-items: ${({alignItems}) => alignItems || \"center\"};\n    ${({left, right, justifyContent}) => (!left && !right) ? `justify-content: ${justifyContent || \"center\"};` : ''};\n    ${({left}) => left ? `justify-content: flex-start;` : ''}\n    ${({right}) => right ? `justify-content: flex-end;` : ''}\n    flex-direction: ${({direction}) => direction || \"row\"};\n    ${({rowSpace}) => rowSpace && `& > *:nth-child(n+2){margin-left:${rowSpace}px;}`}\n    ${({columnSpace}) => columnSpace && `& > *:nth-child(n+2){margin-top:${columnSpace}px;}`}\n\n    background-color: ${({transparent,theme}) => transparent? 'transparent': theme.default.main};\n    color: ${(props) => props.theme.default.text};\n`","import { ComponentPropsWithRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Colorset } from \"styles/styled\";\n\ninterface ButtonProps extends ComponentPropsWithRef<\"button\"> {\n    fontSize?: number\n    fullWidth?: boolean\n    color?: \"primary\" | \"secondary\" | \"ghost\"\n    bold?: boolean\n}\n\nexport const Button = styled.button<ButtonProps>`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    padding: 0.5rem 0;\n    margin: 0.5rem 1rem;\n    width: ${({fullWidth}) => fullWidth ? \"100%\" : '8rem'};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize+'px' || '2rem'};\n\n    // 수정 필요!\n    ${ ({color, theme})=> {\n        const colorset: Colorset = !color ? theme.primary : theme[color];\n        return `\n            background: ${colorset.main};\n            color: ${colorset.text};\n            border: ${colorset.border} solid thin;\n            &:hover {\n                background: ${colorset.accent};\n                outline: none;\n            }\n        `\n    }}\n`","import React from 'react';\nimport { ComponentPropsWithRef } from 'react';\nimport styled from 'styled-components';\n\ninterface SwitchProps extends Omit<ComponentPropsWithRef<\"input\">, 'size'>  {\n    size?: 'sm'| 'md' | 'lg'\n}\n\nconst ID = () => '_'+Math.random().toString(36).substr(6);\n\n\nexport const Switch = (props:SwitchProps) => {\n    const {size, ...inputProps} = props;\n    const id = 'checkbox' + ID();\n    const [w, r] = size ==='md' ? [60,30] : size ==='lg' ?[84,40] : [42,26];\n    return (\n        <CheckBoxWrapper>\n            <CheckBox id={id} type=\"checkbox\" w={w} r={r} {...inputProps} />\n            <CheckBoxLabel htmlFor={id} w={w} r={r}/>\n        </CheckBoxWrapper>\n    );\n};\n  \nconst CheckBoxWrapper = styled.div`\nposition: relative;\n`;\ninterface CheckBoxLabelProps extends ComponentPropsWithRef<\"label\">{\n    w: number\n    r: number\n}\nconst CheckBoxLabel = styled.label<CheckBoxLabelProps>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${props => props.w}px;\n    height: ${props => props.r}px;\n    border-radius: ${props => props.w-props.r}px;\n    background: #bebebe;\n    cursor: pointer;\n    &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width:  ${props => props.r-6}px;\n        height:  ${props => props.r-6}px;\n        margin: 3px;\n        background: #ffffff;\n        box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n        transition: 0.2s;\n    }\n`;\n\ninterface CheckBoxProps extends ComponentPropsWithRef<\"input\">{\n    w: number\n    r: number\n}\nconst CheckBox = styled.input<CheckBoxProps>`\n    opacity: 0;\n    z-index: 1;\n    border-radius: ${props => props.w-props.r}px;\n    width: ${props => props.w}px;\n    height: ${props => props.r}px;\n    &:checked + ${CheckBoxLabel} {\n        background: #4fbe79;\n        &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width:  ${props => props.r-6}px;\n        height:  ${props => props.r-6}px;\n        margin-left:${props => props.w-props.r+3}px;\n        transition: 0.2s;\n    }\n}\n  `;","import styled from 'styled-components';\nimport { Box, BoxProps } from './Box';\n\nexport interface TextProps extends BoxProps{\n    bold?: boolean\n    color?: string\n    fontSize?: number\n}\n\nconst Text = styled(Box)<TextProps>`\n    width: auto;\n    padding: 5px;\n    background-color: transparent;\n    color: ${({color}) => color || ''};\n    font-weight: ${({bold}) => bold ? 'bold' : 'normal'};\n    font-size: ${({fontSize}) => fontSize+'px' || '1rem'};\n`\n\nexport const Head = (props:TextProps) => <Text fontSize={48} bold left {...props}/>\nexport const Title = (props:TextProps) => <Text fontSize={36} bold left {...props}/>\nexport const Subtitle = (props:TextProps) => <Text fontSize={24} left {...props}/>\nexport const Contents = (props:TextProps) => <Text fontSize={21} left {...props}/>\nexport const Infos = (props:TextProps) => <Text fontSize={16} left {...props}/>\n\nexport default Text;","import { toggleSignInModalState } from 'atoms/signInModal';\nimport { Box } from 'components/material/Box';\nimport { Head, Subtitle } from 'components/material/Text';\nimport React, { useRef } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { IoLogoGoogle, IoLogoFacebook, IoLogoGithub } from 'react-icons/io5';\n\nconst Modal = styled.div`\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n`;\nconst ModalContent = styled.div`\n    background-color: #fefefe;\n    margin: 15% auto; /* 15% from the top and centered */\n    padding: 20px;\n    border: 1px solid #888;\n    width: min(555px, 80%); \n    box-shadow: 1px 1px 6px black;\n`\nconst ModalHeader = styled(Box)`\n    height: 100px;\n`;\nconst ModalBody = styled.div`\n    display: grid;\n    grid-template-rows: repeat(3, 75px);\n    gap: 15px;\n    padding-left: max(5%, 10px);\n    padding-right: max(5%, 10px);\n`;\nconst SocialButton = styled.button`\n    padding: 0;\n    border: none;\n    background: none;\n    box-shadow: 2px 2px 6px grey;\n    display: grid;\n    grid-template-columns: 75px auto;\n    & > * { height: 100%; padding:0;}\n`\nconst SignIn = () => {\n    const [display, toggleDisplay] = useRecoilState(toggleSignInModalState);\n    const ref = useRef(null);\n    const toggle = (event:any) => \n        (event.target === ref.current) && toggleDisplay('');\n    \n    const colors = {\n        google: \"#db4437\",\n        facebook: \"#3b5998\",\n        github: \"#111\"\n    }\n    return (\n        <Modal ref={ref} style={{display}} onClick={toggle}>\n            <ModalContent>\n                <ModalHeader>\n                    <Head color=\"#666\">JOIN</Head>\n                </ModalHeader>\n                <ModalBody>\n                    <SocialButton>\n                        <Box transparent>\n                            <IoLogoGoogle size={32} color={colors.google}/>\n                        </Box>\n                        <Subtitle color={colors.google}> Google </Subtitle>\n                    </SocialButton>\n                    <SocialButton>\n                        <Box transparent>\n                            <IoLogoFacebook size={32} color={colors.facebook}/>\n                        </Box>\n                        <Subtitle color={colors.facebook}> Facebook </Subtitle>\n                    </SocialButton>\n                    <SocialButton>\n                        <Box transparent>\n                            <IoLogoGithub size={32} color={colors.github}/>\n                        </Box>\n                        <Subtitle color={colors.github}> Github</Subtitle>\n                    </SocialButton>\n                </ModalBody>\n                <ModalHeader>\n                    <Subtitle>SNS계정을 이용해 로그인하세요.</Subtitle>\n                </ModalHeader>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default SignIn;","import { toggleSignInModalState } from \"atoms/signInModal\";\nimport { toggleThemeState } from \"atoms/theme\";\nimport { userState } from \"atoms/user\";\nimport { Box } from \"components/material/Box\";\nimport { Button } from \"components/material/Button\";\nimport { Switch } from \"components/material/Switch\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport SignIn from \"./SignIn\";\n\nconst Head = styled.header`\n    background-color:#27384B;\n    height: 55px;\n    padding: 5px 20px 5px 20px;\n    color: ${({theme}) => theme.default.text};\n    display: grid;\n    grid-template-columns : 150px calc(100% - 370px) 180px;\n`\nconst Buttons = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 25%);\n`\n\nconst Header = () => {\n    const [user, setUser] = useRecoilState(userState);\n    const [theme, toggleTheme] = useRecoilState(toggleThemeState);\n    const [display, toggleDisplay] = useRecoilState(toggleSignInModalState);\n    const history = useHistory();\n    return (\n        <Head>\n            <Button color=\"ghost\" bold fontSize={36} onClick={()=>history.push('/')}> StackFolio </Button>\n            <Box transparent>\n                <Switch size=\"md\" checked={theme==='light'} onChange={()=>toggleTheme('')} />\n            </Box>\n            <Buttons>\n                <Button color=\"ghost\" onClick={()=>history.push('/search')}>검색</Button>\n                {\n                    user ?\n                    <>\n                    <Button color=\"ghost\">글쓰기</Button>\n                    <Button color=\"ghost\">알림</Button>\n                    <Button color=\"ghost\">프로필</Button>\n                    </>\n                    :\n                    <>\n                        <Button color=\"ghost\" onClick={()=>toggleDisplay('')}> 로그인</Button>\n                        <SignIn />\n                    </>\n                }\n            </Buttons>\n        </Head>\n    )\n}\nexport default Header;","import { Box } from \"components/material/Box\";\nimport styled from \"styled-components\";\nconst MainWrapper = styled.div`\n    width:min(1470px, calc(100% - 30px));\n    padding: 20px 0 40px 0;\n`\n\n// 데스크탑 이상 사이즈의 화면에서 양측 여백을 관리하는 Wrapper\nexport default ({children}:any) => (\n    <Box style={{width:\"100%\"}}>\n        <MainWrapper>\n            {children}\n        </MainWrapper>\n    </Box>\n);","import { css } from \"styled-components\"\n\nconst sizes: { [key: string]: number } = {\n  giant: 1920,\n  huge: 1440,\n  bigDesktop: 1200,\n  desktop: 1000,\n  tablet: 768,\n  thone: 600,\n  phablet: 480,\n  phone: 376,\n  tiny: 330,\n}\n\n// Iterate through the sizes and create a media template\n// Usage:\n// const StyledWrapper = styled.div`\n//   ${media.huge`margin-left: 20px;`}\n// `\nconst media = Object.keys(sizes).reduce(\n  (accumulator: { [key: string]: any }, label: string) => {\n    const emSize = sizes[label] / 16\n    accumulator[label] = (first: any) => css`\n      @media (max-width: ${emSize}em) {\n        ${css(first)}\n      }\n    `\n    return accumulator\n  },{})\n\n\n\nexport default media;","import Text from 'components/material/Text';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport media from 'styles/media';\n\nconst Wrapper = styled.div`\n    background-color:#27384B;\n    padding: 30px;\n    height: 500px;\n    display: grid;\n    grid-template-columns: 1.2fr 1fr;\n    ${media.tablet`\n    height: 250px;\n    padding: 10px;\n    grid-template-columns: 1fr;\n    `}\n`\nconst LeftWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 50px 150px;\n    ${media.tablet`\n        padding: 15px;\n        & > * {\n            font-size: 36px;\n        }\n    `}\n`\n\n\nconst Main = () => {\n    const history = useHistory();\n    return (\n        <Wrapper>\n            <LeftWrapper>\n                <Text fontSize={80} color=\"white\" bold>STACK</Text>\n                <Text fontSize={80} color=\"white\" bold>PORTFOLIO.</Text>\n            </LeftWrapper>\n            <div></div>\n        </Wrapper>\n    )\n}\n\nexport default Main;","import { Button } from 'components/material/Button';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface TagContainerProps {\n    small?: boolean\n}\nconst TagComponent = styled(Button)<TagContainerProps>`\n    margin: 0px;\n    font-size: 1rem;\n    font-weight: normal;\n    padding: 3px 9px;\n    width: auto;\n    text-decoration: none;\n    opacity: 0.9;\n    box-sizing: border-box;\n    border-radius: 9px;\n    &:focus-within {\n        outline:none;\n        box-shadow: 0 0 0 1.5px ${({theme}) => theme.primary.border};\n    }\n    padding: ${({small}) => small ? '1px 9px' : '3px 9px'};\n`\n\ninterface TagProps {\n    name: string\n    color?: \"primary\" | \"secondary\"\n    small?: boolean\n}\n\ninterface TagData{\n    id: string,\n    name: string,\n}\nconst getTagById = async (name:string) => ({\n    id: 'a100',\n    name\n});\nconst Tag = ({name, color, small}:TagProps) => {\n    const [loading, setLoading] = useState(false);\n    color = color || \"primary\";\n    const history = useHistory();\n\n    return (\n        <TagComponent color={color} onClick={()=>history.push(`/tags/${name}`)} small={small}>\n            { loading ? '...' : name[0].toUpperCase()+name.slice(1) }\n        </TagComponent>\n    )\n}\n\nexport default Tag;","import { css } from \"styled-components\"\n\nconst previewStyle = css`\n  border-radius: 2px;\n  background-color: #ffffff;\n  border: 1px;\n  box-shadow: 0px 1px 0px 1px rgba(147, 147, 147, 0.25);\n`\n\nexport default previewStyle;\n","import { getPostData, PostData } from 'db/Post';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Text from 'components/material/Text';\nimport Tag from './Tag';\nimport { Box } from 'components/material/Box';\nimport { AiOutlineLike } from 'react-icons/ai';\nimport media from 'styles/media';\nimport { useHistory } from 'react-router-dom';\nimport previewStyle from '../../styles/previewStyle'\n\nconst Wrapper = styled.div`\n    ${previewStyle}\n    display: grid;\n    grid-template-rows: 40px 40px 60px 16px 55px;\n    grid-template-columns: 70% 30%;\n    grid-template-areas: \n        \"tags tags\"\n        \"title img\"\n        \"contents img\"\n        \"info img\"\n        \"footer footer\";\n    & > div:first-child{grid-area:tags;}\n    & > div:nth-child(2){grid-area:img;}\n    & > div:nth-child(3){grid-area:title;}\n    & > div:nth-child(4){grid-area:contents;}\n    & > div:nth-child(5){grid-area:info;}\n    & > div:nth-child(6){grid-area:footer;}\n    max-width: 100%;\n    padding: 15px 25px 25px 25px;\n    ${media.phone`\n        grid-template-rows: 200px 40px 60px 16px 55px;\n        grid-template-areas: \n            \"img img\"\n            \"title title\"\n            \"contents contents\"\n            \"info info\"\n            \"footer footer\";\n        & > div:first-child{display:none;}\n    `}\n`;\nconst TagsWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    & > *:nth-child(n+2){\n        margin-left: 5px\n    }\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n`\nconst Avatar = styled.img`\n    background-color: #ddd;\n    border-radius: 50%;\n    width: 45px;\n    height: 45px;\n`\nconst ProfilePreview = styled.div`\n    display: grid;\n    grid-template-columns: 50px auto;\n    gap: 10px;\n    float: left;\n`\nconst WrapperFooter = styled.div`\n    width: 100%;\n    height: 100%;\n    & > div:first-child{padding-top: 10px;}\n    & > div:nth-child(2){padding-top: 20px;}\n`\nconst PostPreview = (props:PostData) => {\n    const history = useHistory();\n    const {tags, title, content, thumbnail, timestamp, author, likes, comments} = props;\n\n    // TODO [임시] 조상노드에서 map으로 변환 작업 필요.\n    const mappedTimestamp: Array<string> = timestamp.split('-')\n    //\n    // TODO bookmarks db추가 필요\n    const bookmarks = 12\n    //\n    // TODO color theme지정 필요\n    // TODO ProfilePreview, Box 부모 컴포넌트로 wrapper footer 만들어서 감싸기 필요\n    return (\n        <Wrapper>\n            <TagsWrapper>\n                {tags.map(tag => <Tag key={tag} small color={'secondary'} name={tag}/>)}\n            </TagsWrapper>\n            <Image src={thumbnail} alt=\"img\"/>\n            <Text bold left fontSize={21}>{title}</Text>\n            <Text>{content.length > 150 ? content.slice(0,150)+'...' : content}</Text>\n            <Text left color={'#909090'} font-size={16}>\n                {`${mappedTimestamp[0]}년 ${mappedTimestamp[1]}월 ${mappedTimestamp[2]}일`} &nbsp; {comments}개의 댓글\n            </Text>\n            <WrapperFooter>\n                <ProfilePreview>\n                    <Avatar onClick={()=>history.push(`/@${author}`)} />\n                    <Text left>{author}</Text>\n                </ProfilePreview>\n                <Box transparent right>\n                    <AiOutlineLike size={20}/> &nbsp;\n                    <Text color={'#909090'}> {likes} </Text> &nbsp;\n                    <Text color={'#909090'} rowSpace={10}> {bookmarks} </Text>\n                </Box>\n            </WrapperFooter>\n        </Wrapper>\n    )\n}\n\nexport default PostPreview;","import { PostData } from \"./Post\";\n\nexport interface TopicData {\n    topic: string\n    posts: PostData[]\n}\n\nexport const getTopicData = async (id:string):Promise<TopicData> => {\n    return {\n        topic:id,\n        posts: [\n            {\n                tags: ['python', 'javascript', 'react', 'es6'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 20,\n                likes: 51\n            },\n            {\n                tags: ['c++', 'javascript'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 10,\n                likes: 15\n            },\n            {\n                tags: ['maching learning', 'python'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 6,\n                likes: 5\n            },\n            {\n                tags: ['database'],\n                title: 'MySQL',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 62,\n                likes: 25\n            }\n        ]\n    }\n}","import { Box } from 'components/material/Box';\nimport PostPreview from 'components/common/PostPreview';\nimport Text from 'components/material/Text';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { PostData } from 'db/Post';\nimport { getTopicData } from 'db/Topic';\nimport media from 'styles/media';\n\nconst TopicWrapper = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \n        \"title title\"\n        \"a b\"\n        \"c d\";\n    ${media.desktop`\n        grid-template-columns: 1fr;\n        grid-template-areas: \n        \"title\"\n        \"a\"\n        \"b\"\n        \"c\"\n        \"d\";\n    `}\n    & > div:first-child {\n        grid-area: title;\n        height: 30px;\n        margin-bottom: -20px;\n    }\n    gap: 30px;\n`;\n\ninterface TopicProps{\n    title: string\n}\n\n// 홈 화면에 노출되는 Topic\n// 게시글 미리보기 4개를 담고 있음.\nconst Topic = ({title}:TopicProps) => {\n    const [loading, setLoading] = useState(true);\n    const [posts, setPosts] = useState<PostData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const postsData = await getTopicData(title);\n            setPosts(postsData.posts);\n            setLoading(false);\n        })();\n    },[])\n    return (\n        <Box transparent>\n            <TopicWrapper>\n                <Text \n                    justifyContent=\"flex-start\" \n                    bold\n                    fontSize={24}>\n                    {title}\n                </Text>\n                {\n                    loading ? <>Loading...</>\n                    :\n                    posts.map((post:PostData, idx:number) =>(\n                        <PostPreview key={idx} {...post} />\n                    ))\n                }\n            </TopicWrapper>\n        </Box>\n    );\n}\n\nexport default Topic;","import { QuestionData } from \"./Question\";\n\nexport interface TopicQuestionsData {\n    topic: string\n    questions: QuestionData[]\n}\n\nexport const getTopicQuestionsData = async (id:string):Promise<TopicQuestionsData> => {\n    return {\n        topic:id,\n        questions: [\n            {\n                id,\n                author: 'Admin',\n                title: 'How to be a good programmer?',\n                content: '알려주세요...',\n                likes: 120,\n                views: 3902,\n                comments: 3\n            },\n            {\n                id,\n                author: 'Messi',\n                title: 'How to be a good Soccer Player?',\n                content: '알려주세요...',\n                likes: 1390,\n                views: 23090,\n                comments: 90\n            },\n            {\n                id,\n                author: 'Son',\n                title: 'How to be a good programmer?',\n                content: '알려주세요...',\n                likes: 125,\n                views: 339,\n                comments: 32\n            },\n            {\n                id,\n                author: 'Park',\n                title: 'About React',\n                content: 'It does not work...',\n                likes: 12,\n                views: 688,\n                comments: 6\n            }\n        ]\n    }\n}","import React from 'react';\nimport Text, {TextProps} from \"./Text\"\n\nexport interface NumberProps extends TextProps {\n    value: number\n}\nexport const Number = ({value, ...others}:NumberProps) => {\n    let val = value;\n    let unit = '';\n    if(value > 1000000000){\n        unit = 'b';\n        val = Math.floor(value/100000000)/10;\n    }\n    else if(value > 1000000){\n        unit = 'm';\n        val = Math.floor(value/100000)/10;\n    }\n    else if(value > 1000){\n        unit = 'k';\n        val = Math.floor(value/100)/10;\n    }\n    return (<Text {...others}> {val+unit} </Text>)\n}","import { Box } from 'components/material/Box';\nimport Text from 'components/material/Text';\nimport { QuestionData } from 'db/Question';\nimport React from 'react';\nimport { IconType } from 'react-icons';\nimport { BiLike } from 'react-icons/bi';\nimport { RiQuestionAnswerLine } from \"react-icons/ri\";\nimport { IoPeopleOutline } from \"react-icons/io5\";\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Tag from './Tag';\nimport { Number } from 'components/material/Number';\nimport previewStyle from '../../styles/previewStyle'\n\nconst Wrapper = styled(Link)`\n    ${previewStyle}\n    display: grid;\n    grid-template-columns: 33.3% 66.6%;\n    max-width: 100%;\n    padding: 0px 20px 17px 25px;\n    min-height: 114px;\n    text-decoration:none;\n`;\nconst Left = styled.div`\n    display: grid;\n    padding: 0px 45px 0px 0px;\n    grid-template-columns: repeat(3, 33.33%);\n`\nconst Right = styled.div`\n    display: grid;\n    grid-template-areas: \n        \"t t\"\n        \"s info\";\n    grid-template-columns: 50% 50%;\n    grid-template-rows: 66% 34%;\n    & > *:first-child{grid-area: t}\n    & > *:nth-child(2){grid-area: s}\n    & > *:nth-child(3){grid-area: info}\n`\n\ninterface CountBoxProps {\n    Icon: IconType\n    value:number\n}\nconst CountBox = ({Icon, value}:CountBoxProps) => {\n    return (\n        <Box transparent direction=\"column\">\n            <Number fontSize={24} value={value}/>\n            <Icon size={24}/>\n        </Box>\n    )\n}\n\nconst QuestionPreview = (props:QuestionData) => {\n    const {\n        id, author, title, content, likes, views, comments\n    } = props;\n    // TODO [임시] 조상노드에서 map으로 변환 작업 필요.\n    const mappedTimestamp: Array<string> = '2021-01-02'.split('-')\n    //\n    // TODO color theme지정 필요\n    // TODO 글씨체 변경 필요\n    return (\n        <Wrapper to={`/questions/${id}`}>\n            <Left>\n                <CountBox Icon={BiLike} value={likes} />\n                <CountBox Icon={RiQuestionAnswerLine} value={comments} />\n                <CountBox Icon={IoPeopleOutline} value={views} />\n            </Left>\n            <Right>\n                <Text font-size={24} left bold>{title}</Text>\n                {/* 여기 생략하는지? <Text left>{content}</Text> */}\n                <Box left transparent rowSpace={10}>\n                    <Tag font-size={21} color={'secondary'} name=\"Hello World!\" />\n                    <Tag font-size={21} color={'secondary'} name=\"C++\" />\n                </Box>\n                <Text color={'#909090'}>\n                    {`${mappedTimestamp[0]}년 ${mappedTimestamp[1]}월 ${mappedTimestamp[2]}일 ${author}`}\n                </Text>\n            </Right>\n        </Wrapper>\n    )\n}\n\nexport default QuestionPreview;","import React, { useState, useEffect } from 'react';\nimport { Box } from 'components/material/Box';\nimport Text from 'components/material/Text';\nimport styled from 'styled-components';\nimport { getTopicQuestionsData } from 'db/TopicQuestions';\nimport media from 'styles/media';\nimport QuestionPreview from 'components/common/QuestionPreview';\nimport { QuestionData } from 'db/Question';\n\nconst TopicWrapper = styled.div`\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \n        \"title title\"\n        \"a b\"\n        \"c d\";\n    ${media.desktop`\n        grid-template-columns: 1fr;\n        grid-template-areas: \n        \"title\"\n        \"a\"\n        \"b\"\n        \"c\"\n        \"d\";\n    `}\n    & > div:first-child {\n        grid-area: title;\n        height: 30px;\n        margin-bottom: -20px;\n    }\n    gap: 30px;\n`;\n\ninterface TopicProps{\n    title: string\n}\n\n// 홈 화면에 노출되는 질문 모아보기 컴포넌트\n// 질문 미리보기 4개를 담고 있음.\nconst TopicQuestions = ({title}:TopicProps) => {\n    const [loading, setLoading] = useState(true);\n    const [questions, setQuestions] = useState<QuestionData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const questionsData = await getTopicQuestionsData(title);\n            setQuestions(questionsData.questions);\n            setLoading(false);\n        })();\n    },[])\n    return (\n        <Box transparent>\n            <TopicWrapper>\n                <Text \n                    justifyContent=\"flex-start\" \n                    bold\n                    fontSize={24}>\n                    {title}\n                </Text>\n                {\n                    loading ? <>Loading...</>\n                    :\n                    questions.map((question:QuestionData, idx:number) =>(\n                        <QuestionPreview key={idx} {...question} />\n                    ))\n                }\n            </TopicWrapper>\n        </Box>\n    );\n}\n\nexport default TopicQuestions;","import Tag from 'components/common/Tag';\nimport { Box } from 'components/material/Box';\nimport { Subtitle } from 'components/material/Text';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled(Box)`\n    border: none;\n    border-bottom: 2px solid ${({theme}) => theme.divider};\n    padding: 10px;\n`\n\ninterface TrendTagsProps {\n    tags: string[]\n}\nconst TrendTags = ({tags}:TrendTagsProps) => (\n    <Wrapper left rowSpace={5}>\n        <Subtitle> 인기 태그 목록 </Subtitle>\n        <Box left rowSpace={5}>\n            {tags.map((tag, idx) => \n                <Tag key={idx} color=\"primary\" name={tag} />\n            )}\n        </Box>\n    </Wrapper>\n)\n\nexport default TrendTags;","import { userState } from 'atoms/user';\nimport MainWrapper from 'components/common/MainWrapper';\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport Main from './Main';\nimport Topic from './Topic';\nimport TopicQuestions from './TopicQuestions';\nimport TrendTags from './TrendTags';\n\nconst HomeWrapper = styled.div`\n    & > *:nth-child(n+2){margin-top:30px;}\n`\nconst Home = () => {\n    const [loading, setLoading] = useState(true);\n    const [user, setUser] = useRecoilState(userState);\n\n    return (\n        <div>\n            <Main />\n            <MainWrapper>\n                <HomeWrapper>\n                    <TrendTags tags={[\"javascript\", \"c++\", \"python\"]}/>\n                    <Topic title=\"인기 있는 스펙 콘텐츠 TOP\" />\n                    { user && \n                      <Topic title=\"내가 가장 관심있어하는 토픽\" /> \n                    }\n                    <TopicQuestions title=\"스택폴리오 사용자들이 가장 많이 본 질문\" />\n                    <TopicQuestions title=\"답변을 기다리는 질문\" />\n                </HomeWrapper>\n            </MainWrapper>\n        </div>\n    )\n}\n\nexport default Home;","import { ComponentPropsWithRef } from \"react\";\nimport styled from \"styled-components\";\ninterface TextFieldProps extends ComponentPropsWithRef<\"input\"> {\n    fullWidth?: boolean\n    width?: number\n    height?: number\n}\n\nexport const TextField = styled.input<TextFieldProps>`\n    padding: 5px;\n    margin: 10px;\n    size: ${({size}) => size};\n    width: ${ ({fullWidth, width}) => fullWidth ? '100%' : width ? width+'px' : '10rem' };\n    height: ${({height}) => height ? height+'px' : ''};\n    background: transparent;\n    border: none;\n    border-bottom: 2px solid white;\n    color: white;\n    &:focus{\n        outline: none;\n    }\n    ::placeholder {\n        color: ${ ({theme}) => theme.disable };\n    }\n`","import { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport { Switch } from 'components/material/Switch';\nimport { TextField } from 'components/material/Textfield';\nimport React, { useState } from 'react';\nimport Tag from './common/Tag';\n\nconst Playground = () => {\n    const [checked, setChecked] = useState(true);\n    return (\n        <Box direction=\"column\">\n        <Box>\n            Buttons\n            <Button color=\"primary\" onClick={()=>{alert('hello!')}}>\n                Primary\n            </Button>\n            <Button color=\"secondary\">\n                Secondary\n            </Button>\n            <Button color=\"ghost\" >\n                ghost\n            </Button>\n        </Box>\n        <hr/>\n            <Tag name=\"hello\" />\n        <hr/>\n        <Box>\n            Text Field\n            <TextField placeholder=\"hello\" size={100} />\n        </Box>\n        <hr/>\n        <Box>\n            <Box>\n                Switch\n            </Box>\n\n            <Switch/>\n            <Switch size='md' checked={!checked} onChange={()=>setChecked(prev=>!prev)}/>\n            <Switch size='lg'/>\n        </Box>\n        </Box>\n    )\n}\n\nexport default Playground;","import Tag from 'components/common/Tag';\nimport { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport Text from 'components/material/Text';\nimport { TextField } from 'components/material/Textfield';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport media from 'styles/media';\n\nconst SearchWrapper = styled.div`\n    margin: 20px 0 40px 0;\n    width: min(920px, 100%);\n    padding: 0;\n    display: grid;\n    grid-template-rows: auto 24px;\n    gap: 5px;\n    ${media.tablet`\n        display: none;\n    `}\n`\n\ninterface SearchFieldProps{initialValue?:string}\nconst SearchField = ({initialValue}:SearchFieldProps) => {\n    const [searchValue, setSearchValue] = useState(initialValue||'');\n    const history = useHistory();\n    const onSearched = ({which}:any) => which===13 && history.push(`/search/${searchValue}`)\n    return (\n    <Box style={{width:\"100%\", background:\"#27384B\"}}>\n            <SearchWrapper>\n                <Box transparent>\n                    <TextField \n                        placeholder=\"검색어를 입력해주세요...\"\n                        fullWidth\n                        height={50}\n                        style={{ fontSize: 24 }}\n                        value={searchValue}\n                        onChange={({target:{value}}) => setSearchValue(value)}\n                        onKeyPress={onSearched}\n                    />\n                </Box>\n                <Tags />\n            </SearchWrapper>\n        </Box>\n    )\n}\n\nconst TagsDiv = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: calc(100% - 150px) 150px;\n    padding: 0 10px;\n`;\n\nconst Tags = () => {\n    const history = useHistory();\n    return (\n        <TagsDiv>\n            <Box transparent left rowSpace={10}>\n                <Text bold> 인기 태그 목록 </Text>\n                <Tag name=\"python\"/>\n                <Tag name=\"javascript\"/>\n                <Tag name=\"react\"/>\n                <Tag name=\"c++\"/>\n                <Tag name=\"database\"/>\n            </Box>\n            <Button color=\"ghost\" bold onClick={()=>history.push('/tags')}> \n                태그 더보기 \n            </Button>\n        </TagsDiv>\n    )\n}\n\nexport default SearchField;","import { PostData } from \"./Post\";\n\nexport interface SearchData {\n    keyword: string\n    results: PostData[]\n}\n\nexport const getSearchData = async (keyword:string):Promise<SearchData> => {\n    return {\n        keyword,\n        results: [\n            {\n                tags: ['python', 'javascript', 'react', 'es6'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 20,\n                likes: 51\n            },\n            {\n                tags: ['aa', 'bb'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 10,\n                likes: 15\n            },\n            {\n                tags: ['aa', 'bb'],\n                title: 'Lorem ipsum',\n                content: `Lorem ipsum dolor sit amet, consectetur adipisicing elit, \n                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit \n                in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui \n                officia deserunt mollit anim id est laborum.`,\n                thumbnail:'https://cfnimage.commutil.kr/phpwas/restmb_allidxmake.php?idx=3&simg=2018082719141105121dd55077bc212323473.jpg',\n                timestamp: '2021-01-20',\n                author: 'swimmie',\n                comments: 6,\n                likes: 5\n            }\n\n        ]\n    }\n}","import SearchField from 'components/search/SearchField';\nimport { Box } from 'components/material/Box';\nimport { PostData } from 'db/Post';\nimport { SearchData, getSearchData } from 'db/Search';\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'components/material/Button';\n\nconst Search = ({match}:any) => {\n    const {params:{keyword}} = match;\n    const [{results}, setSearchResult] = useState<SearchData>({\n        keyword, results:[]\n    })\n    useEffect(()=>{\n        (async()=>{\n            const searchResultData = await getSearchData(keyword);\n            setSearchResult(searchResultData);\n        })();\n    },[])\n    return (\n        <>\n            <SearchField />\n            <Box transparent direction=\"row\" left rowSpace={30}>\n                <Button color=\"ghost\" >포스트</Button>\n                <Button color=\"ghost\" >질문게시판</Button>\n            </Box>\n            {\n                // results.map( (result:PostData) => {\n                // })\n            }\n        </>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst Tags = () => {\n    return (\n        <>\n        Tags List\n        </>\n    )\n}\n\nexport default Tags;","export interface TagData{\n    name: string\n    posts: number\n}\n\nexport const getTagData = async (name:string):Promise<TagData> => {\n    return {\n        name,\n        posts: 10\n    }\n}","import MainWrapper from 'components/common/MainWrapper';\nimport Text from 'components/material/Text';\nimport { getTagData } from 'db/Tag';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\n\nconst HeadWrapper = styled.div`\n    margin-bottom: 45px;\n    & > * :first-child{\n        margin-bottom: 35px;\n    }\n    & > * :nth-child(2){\n        margin-bottom: 22px;\n    }\n\n`;\nconst BodyWrapper = styled.div`\n    display: grid;\n    gap:30px;\n    grid-template-columns: 1fr 1fr;\n    ${media.tablet`\n        grid-template-columns: 1fr;\n    `}\n`\n\n\nconst TagDetail = ({match}:any) => {\n    const {params:{id}} = match;\n    const [{name, posts}, setTagData] = useState({\n        name: '', posts:0\n    })\n    useEffect(()=>{\n        (async () => {\n            const tagData = await getTagData(id);\n            setTagData(tagData);\n        })();\n    }, [id])\n    return (\n        <MainWrapper>\n            <HeadWrapper>\n                <Text fontSize={48} left bold >#{name} </Text>\n                <Text fontSize={21} left>태그내용 설명 </Text>\n                <Text fontSize={16} left>\n                    {\n                        posts ? \n                        <>{posts}개의 포스트 </>\n                        : \"포스트가 없습니다.\"\n                    }\n                </Text>\n            </HeadWrapper>\n            <BodyWrapper>\n            </BodyWrapper>\n        </MainWrapper>\n    )\n}\n\nexport default TagDetail;","import React from 'react';\n\nconst QuestionDetails = ({match}:any) => {\n    const {params:{id}} = match;\n    return (\n        <>\n            {id}\n        </>\n    )\n}\n\nexport default QuestionDetails;","export interface QuestionData{\n    id:string\n    author:string\n    title: string\n    content: string\n    likes:number\n    views:number\n    comments: number\n}\n\nexport const getQuestionData = async(id:string):Promise<QuestionData> => {\n    return {\n        id,\n        author: 'Admin',\n        title: 'How to be a good programmer?',\n        content: '알려주세요...',\n        likes: 120,\n        views: 3902,\n        comments: 3\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { getQuestionData, QuestionData } from 'db/Question'\nimport QuestionPreview from 'components/common/QuestionPreview';\nimport styled from 'styled-components';\nimport SearchField from 'components/search/SearchField';\nimport MainWrapper from 'components/common/MainWrapper';\n\nconst QuestionsWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 30px;\n`\n\n\nconst Questions = () => {\n    const [questions, setQuestions] = useState<QuestionData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const questionData = await Promise.all(\n                ['a1', 'b222', 'c33'].map(async id => await getQuestionData(id))\n            )\n            setQuestions(questionData);\n        })();\n    },[])\n    return (\n        <>\n        <SearchField />\n        <MainWrapper>\n            <QuestionsWrapper>\n                {questions.map( (question:QuestionData, idx:number) => \n                    <QuestionPreview key={idx} {...question}/>)}\n            </QuestionsWrapper>\n        </MainWrapper>\n        </>\n    )\n}\n\nexport default Questions;","import SearchField from 'components/search/SearchField';\nimport React from 'react';\n\nconst SearchHome = () => {\n    return (\n        <SearchField />\n    )\n}\n\nexport default SearchHome;","import { User } from \"./User\";\n\nexport interface User_Profile{\n    id: string\n    created_at: string\n    updated_at: string\n    username: string\n    bio: string\n    about: string\n    avatar: string\n\n    // What type?\n    social_links: any\n    user: User\n}\n\nexport const getUserProfileData = async (id:string):Promise<User_Profile> => {\n    return {\n        id,\n        created_at: new Date().toString(),\n        updated_at: new Date().toString(),\n        username: \"Admin\",\n        bio: \"string\",\n        about: \"Hello Everyone! Welcome!\",\n        avatar: \"https://t1.daumcdn.net/cfile/tistory/99B97B505CEB7FD712\",\n\n        // What type?\n        social_links: {},\n        user: {\n            id,\n            created_at: new Date().toString(),\n            updated_at: new Date().toString(),\n            provider: \"github\",\n            social_id: \"string\",\n            email: \"string\",\n            is_verified: true\n        }\n    }\n}","import React from 'react';\nimport { Box } from 'components/material/Box';\n\nconst ProfileIntroduce = () => {\n    return (\n        <Box>\n            자기소개\n        </Box>\n    )\n}\n\nexport default ProfileIntroduce","import React, { useEffect, useState } from 'react';\nimport { Box } from 'components/material/Box';\nimport { PostData } from 'db/Post';\nimport { getTopicData } from 'db/Topic';\nimport PostPreview from 'components/common/PostPreview';\nimport styled from 'styled-components';\n\nconst ProfilePosts = () => {\n    const [loading, setLoading] = useState(true);\n    const [posts, setPosts] = useState<PostData[]>([]);\n    useEffect(()=>{\n        (async () => {\n            const postsData = await getTopicData('');\n            setPosts(postsData.posts);\n            setLoading(false);\n        })();\n    },[])\n    return (\n        <Box direction=\"column\" columnSpace={30}>{\n            loading ? <>Loading...</>\n            :\n            [...posts, ...posts].map((post:PostData, idx:number) =>(\n                <PostPreview key={idx} {...post} />\n            ))\n        }</Box>\n    )\n}\n\nexport default ProfilePosts","import React from 'react';\nimport { Box } from 'components/material/Box';\n\nconst ProfileSeries = () => {\n    return (\n        <Box>\n            시리즈\n        </Box>\n    )\n}\n\nexport default ProfileSeries","import { Box } from 'components/material/Box';\nimport Text from 'components/material/Text';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useDimensions from \"react-cool-dimensions\";\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\ninterface ScoreElement {\n    name: string\n    score: number\n    color: string\n}\n\nfunction* mapColorGenerator(){\n    let i=0;\n    let colors = [\n        '#ffd1d1', '#ffffaa', '#ff3377', '#44aaff', '#6666ff', '#f9ac82', '#59afff', '#d1ffd1'\n    ]\n    while(true){\n        yield colors[i];\n        i++;\n        if(i>=colors.length) i%=colors.length;\n    }\n}\nconst TreeContainer = styled.div`\n    display: grid;\n    width: 100%;\n    height: 100%;\n`\nconst TreeLeaf = styled(Text)`\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    color: black;\n    background: ${props => props.color};\n    transition: box-shadow 0.3s ease-in-out;\n    &:hover {\n        z-index:1;\n        box-shadow: 0 15px 15px rgba(0,0,0,0.3);\n    }\n`\nconst DrawTreeMap = ({items, width, height}:{items:ScoreElement[]; width:number; height:number}) => {\n    const history = useHistory();\n    if(!items.length) return <></>;\n    else if(items.length===1){\n        return (\n            <TreeLeaf bold color={items[0].color} onClick={()=>history.push(`/tags/${items[0].name}`)}>\n                {items[0].name}\n            </TreeLeaf>\n        )\n    }\n    const sum = items.reduce((acc, item) => acc + item.score, 0);\n\n    let leftSum = 0;\n    let idx = 0;\n    for(idx; idx<items.length; idx++){\n        leftSum+=items[idx].score;\n        if(leftSum >= sum/2) break;\n    }\n    const [left, right] = [items.slice(0,idx+1), items.slice(idx+1, items.length)];\n    const leftRatio = Math.floor(100*leftSum/sum);\n    const ContainerStyle= width < height ?{\n        gridTemplateRows: `${leftRatio}% ${100-leftRatio}%`\n    } : {\n        gridTemplateColumns: `${leftRatio}% ${100-leftRatio}%`\n    }\n    const leftProps= width<height ? {\n        width,\n        height: height*leftRatio/100\n    } : {\n        width: width*leftRatio/100,\n        height\n    }\n    const rightProps= width<height ? {\n        width,\n        height: height*(100-leftRatio)/100\n    } : {\n        width: width*(100-leftRatio)/100,\n        height\n    }\n    return (\n        <TreeContainer style={ContainerStyle}>\n            <DrawTreeMap items={left} {...leftProps} />\n            <DrawTreeMap items={right} {...rightProps} />\n        </TreeContainer>\n    )\n}\n\nconst Treemap = () =>{\n    const { ref, width } = useDimensions();\n    const [ mapSize, setMapSize ] = useState(0);\n\n    useEffect(()=>{\n        setMapSize(Math.min(width, 400))\n    },[width])\n\n    const [scores, setScores] = useState({\n        javascript: 804,\n        python: 490,\n        react: 1905,\n        algorithm: 1000,\n        graphQL: 200,\n        css: 690,\n        'c++': 180,\n        ml: 120\n    });\n    const [sorted, setSorted] = useState<ScoreElement[]>([]);\n    const generator = mapColorGenerator();\n    const colorGenerator = ():string => generator.next().value || \"white\";\n    useEffect(()=>{\n        const sortedArr = Object.entries(scores)\n            .sort((a, b) => b[1] - a[1])\n            .map( ([name, score]) => ({\n                name,\n                score,\n                color: colorGenerator()\n            }));\n        setSorted(sortedArr);\n    }, [scores])\n    \n    return (\n        <Box transparent style={{width:\"100%\"}} ref={ref as React.RefObject<HTMLDivElement>}>\n            <div style={{width:mapSize, height:mapSize}}>\n                <DrawTreeMap items={sorted} width={mapSize} height={mapSize}/>\n            </div>\n        </Box>\n    )\n}\n\nexport default Treemap;","import MainWrapper from 'components/common/MainWrapper';\nimport { Box } from 'components/material/Box';\nimport { Button } from 'components/material/Button';\nimport { Number } from 'components/material/Number';\nimport {Title, Subtitle, Contents} from 'components/material/Text';\nimport { getUserProfileData, User_Profile } from 'db/User_Profile';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport media from 'styles/media';\nimport ProfileIntroduce from './Profile_Introduce';\nimport ProfilePosts from './Profile_Posts';\nimport ProfileSeries from './Profile_Series';\nimport Treemap from './Treemap';\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 480px auto;\n    ${media.tablet`\n        grid-template-columns: 100%;\n        gap: 30px;\n    `}\n`\nconst HeadWrapper = styled.div`\n    display: grid;\n    margin: 25px 0 80px 0;\n    height: 150px;\n    grid-template-columns: 150px auto;\n    grid-template-rows: 60% 40%;\n    column-gap: 20px;\n    grid-template-areas:\n        \"img name\"\n        \"img followers\";\n`\nconst Image = styled.img`\n    grid-area: img; \n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n`\nconst NumbersWrapper = styled.div`\n    display: grid;\n    margin-bottom: 60px;\n    width: max(75%, 360px);\n    grid-template-columns: repeat(4, 1fr);\n`\ninterface CountBoxProps{\n    title: string\n    value: number\n}\nconst CountBox = ({title, value}: CountBoxProps) => (\n    <Box transparent direction=\"column\">\n        <Subtitle>{title}</Subtitle>\n        <Number fontSize={24} value={value}/>\n    </Box>\n)\nconst About = styled(Box)`\n    background-color: ${({theme}) => theme.mainBackground};\n    width: calc(100% - 40px);\n    margin: 0 20px;\n    padding: 10px;\n    word-wrap: break-word;\n    min-height: 50px;\n`\nconst InfoWrapper = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 30% 70%;\n`\n\n\nconst Profile = ({match}:any) => {\n    const {params:{id}} = match;\n    const [tabs, setTabs] = useState(0);\n    const [{username, avatar, bio, about}, setUserProfile] = useState<User_Profile>(\n    {\n        id,\n        created_at: \"\",\n        updated_at: \"\",\n        username: \"\",\n        bio: \"\",\n        about: \"\",\n        avatar: \"\",\n        social_links: {},\n        user: {\n            id,\n            created_at: \"\",\n            updated_at: \"\",\n            provider: \"google\",\n            social_id: \"\",\n            email: \"\",\n            is_verified: false\n        }\n    });\n\n    useEffect(()=>{\n        (async () => {\n            const userProfile = await getUserProfileData(id);\n            setUserProfile(userProfile);\n        })();\n    },[id])\n\n    return (\n    <MainWrapper>\n        <Wrapper>\n            {/* Profile */}\n            <Box direction=\"column\" justifyContent=\"flex-start\">\n                <HeadWrapper>\n                    <Image src={avatar}/>\n                    <Title alignItems=\"flex-end\">{username}</Title>\n                    <Contents alignItems=\"flex-start\">{bio}</Contents>\n                </HeadWrapper>\n                <NumbersWrapper>\n                    <CountBox title=\"팔로워\" value={300}/>\n                    <CountBox title=\"팔로잉\" value={19}/>\n                    <CountBox title=\"포스트\" value={30}/>\n                    <CountBox title=\"스코어\" value={348000}/>\n                </NumbersWrapper>\n                <About alignItems=\"flex-start\" left>{about}</About>\n                <Box style={{width:\"100%\"}} transparent left>\n                    <Subtitle bold>A</Subtitle>\n                    <Subtitle bold>B</Subtitle>\n                    <Subtitle bold>C</Subtitle>\n                    <Subtitle bold>D</Subtitle>\n                </Box>\n                <Treemap/>\n            </Box>\n            <Box transparent direction=\"column\" justifyContent=\"flex-start\" columnSpace={30}>\n                <Box transparent rowSpace={50}>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(0)}> 글</Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(1)}> 시리즈 </Button>\n                    <Button color=\"ghost\" fontSize={24} onClick={()=>setTabs(2)}> 자기소개 </Button>\n                </Box>\n                {\n                    tabs === 0 ? \n                        <ProfilePosts/> \n                    : tabs === 1 ? \n                        <ProfileSeries/> \n                    :   <ProfileIntroduce/>\n                }\n            </Box>\n        </Wrapper>\n    </MainWrapper>\n    )\n}\n\nexport default Profile;","import Header from 'components/sections/Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from 'components/home/Home';\nimport Playground from './Playground';\nimport React from 'react';\nimport Search from './search/Search';\nimport { Box } from './material/Box';\nimport styled from 'styled-components';\nimport Tags from './tags/Tags';\nimport TagDetail from './tags/TagDetail';\nimport QuestionDetails from './questions/QuestionDetails';\nimport Questions from './questions/Questions';\nimport SearchHome from './search/SearchHome';\nimport Profile from './profile/Profile';\n\nconst Routes = () => {\n    return(\n    // <BrowserRouter>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n            <Route path=\"/playground\" exact component={Playground} />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/@:id\" component={Profile} />\n            <Route exact path=\"/search\" component={SearchHome} />\n            <Route path=\"/search/:keyword\" component={Search} />\n            <Route exact path=\"/tags\" component={Tags} />\n            <Route path=\"/tags/:id\" component={TagDetail} />\n            <Route exact path=\"/questions\" component={Questions} />\n            <Route path=\"/questions/:id\" component={QuestionDetails} />\n        </Switch>\n    </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\nimport { DefaultTheme, ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'styles/global-style';\nimport {themes}from 'styles/theme';\nimport Routes from 'components/Routes';\nimport { useRecoilValue } from 'recoil';\nimport { themeState } from 'atoms/theme';\n\nfunction App() {\n  const themeType = useRecoilValue(themeState);\n  const theme:DefaultTheme = themeType==='light' ? themes.light : themes.dark;\n  return (\n    <>\n      <GlobalStyle theme={theme}/>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}